@model CRUDUsingMVC.Models.StudentModel

@using (Html.BeginForm())
{
    <script type="text/javascript">
        function FillState() {
            debugger;
            var CountryId = $('#Country').val();

            $.ajax({
                url: '/Student/FillState',
                type: "GET",
                dataType: "JSON",
                data: { CountryId: CountryId },
                success: function (stateList) {
                    $("#State").html(""); // clear before appending new list
                    $.each(stateList, function (i, State) {
                        $("#State").append(
                            $('<option></option>').val(State.StateId).html(State.StateName));
                    });
                }
            });
        }




        function FillCity() {
            var stateId = $('#State').val();
            $.ajax({
                url: '/Student/FillCity',
                type: "GET",
                dataType: "JSON",
                data: { StateId: stateId },
                success: function (cities) {
                    $("#City").html(""); // clear before appending new list
                    $.each(cities, function (i, city) {
                        $("#City").append(
                            $('<option></option>').val(city.CityId).html(city.CityName));
                    });
                }
            });
        }
    </script>

    @Html.AntiForgeryToken()

    <form id="submitOrderForm" action="Create" method="post">
        
        <div class="form-horizontal">
            <h4>stdmodel</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RetypeEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RetypeEmail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RetypeEmail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>
            @if (ViewBag.CountryList != null)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.DropDownListFor(m => m.Country,
                           new SelectList(ViewBag.CountryList, "CountryId", "CountryName"),
                           "Select Country",
                           new { @class = "form-control", @onchange = "FillState()" })
                        @*@Html.ValidationMessageFor(m => m.Country, "", new { @class = "text-danger" })*@
                    </div>
                </div>
            }

            @if (ViewBag.StateList != null)
            {
                <div class="form-group">
                    @Html.LabelFor(m => m.State, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.State,
                                new SelectList((ViewBag.StateList != null) ? ViewBag.StateList : 0, "StateId", "StateName"),
                                "Select state",
                                new { @class = "form-control", @onchange = "FillCity()" })
                        @*@Html.ValidationMessageFor(m => m.State, "", new { @class = "text-danger" })*@
                    </div>
                </div>

            }
            @if (ViewBag.CityList != null)
            {
                <div class="form-group">
                    @Html.LabelFor(m => m.City, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.City,
                           new SelectList((ViewBag.CityList != null) ? ViewBag.CityList : 0, "CityId", "CityName"),
                           "Select City",
                           new { @class = "form-control" })
                        @*@Html.ValidationMessageFor(m => m.City, "", new { @class = "text-danger" })*@
                    </div>
                </div>
            }
            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    Male
                    @Html.RadioButtonFor(model => model.Gender, "Male")
                    Female
                    @Html.RadioButtonFor(model => model.Gender, "Female")
                </div>

                @*<div class="form-group">
                 @Html.LabelFor(model => model.Course, htmlAttributes: new { @class = "control-label col-md-2" })
                   <div class="col-md-10">
                        ECE
                   @Html.CheckBoxFor(model => model.Course, "ECE")
                   CSE
                   @Html.CheckBoxFor(model => model.Course, "CSE")
                   EEE
                   @Html.CheckBoxFor(model => model.Course, "EEE")
                   Mechanical
                   @Html.CheckBoxFor(model => model.Course, "Mechanical")

                    </div>*@



                </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>

    </form>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


